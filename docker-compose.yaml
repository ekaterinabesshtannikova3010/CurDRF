services:
  web:
    build: .
    command: sh -c "poetry run python manage.py collectstatic --noinput && poetry run gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/static
      - .:/app
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
    depends_on:
      - web

  db:
    image: postgres:16.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5455:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      retries: 5
      timeout: 5s
    env_file:
      - .env
    restart: always

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always

  celery:
    build: .
    command: sh -c "poetry run celery -A config worker --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    restart: always

  celery-beat:
    build: .
    command: sh -c "poetry run celery -A config beat --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    restart: always

volumes:
  postgres_data:
  static_volume: